{
	"menu": {
		"file": {
			"root": "Datei",
			"new": "Neu",
			"import": "Import",
			"quickPack": "$1 packen",
			"quit": "Beenden"
		},
		"options": {
			"root": "Optionen",
			"language": {
				"root": "Sprache",
				"de_DE": "Deutsch (Deutschland)",
				"en_US": "English (USA)"
			},
			"recent": "Zeige zuletzt gepackte Projekte",
			"doubleClick": "Packe auf DoppelKlick",
			"warnings": "Zeige Warnungen",
			"tooltips": "Zeige Tooltips",
			"tray": "Minimiere zum TrayIcon",
			"boot": "Starte bei Systemstart",
			"defaultApp": "Mache zur Standardanwendung"
		},
		"library": {
			"root": "Bibliothek",
			"copy": "Kopiere Skripte",
			"changePath": "Ändere Pfad zur Bibliothek",
			"showPath": "Zeige Pfad zur Bibliothek",
			"overwrite": "Überschreibe ohne Meldung"
		},
		"validator": {
			"root": "Validator",
			"enable": "JS validieren",
			"options": "jsHint Optionen"
		},
		"packager": {
			"root": "packager",
			"closure": "Nutze Closure Compiler",
			"uglify": "Nutze Uglify.js",
			"output": "Zeige Error Ausgaben"
		},
		"help": {
			"root": "Hilfe",
			"updates": "Prüfe auf neue Version",
			"changelog": "Zeige Changelog",
			"about": "Über"
		}
	},
	"list": {
		"lastPackedProjects": "Zuletzt gepackte Projekte",
		"newProject": "Neues Projekt"
	},
	"details": {
		"info": {
			"packages": " $1 Pakete",
			"files": "$1 Dateien"
		},
		"package": {
			"fileName": "Datei-Name",
			"addFile": "Datei(en) hinzufügen",
			"libraryImport": "Aus der Bibliothek importieren"
		},
		"button": {
			"jsHint": "jsHint",
			"pack": "Packen!"
		}
	},
	"tooltip": {
		"list": {
			"configure": "$1 einstellen",
			"delete": "$1 löschen",
			"pack": "$1 packen"
		},
		"details": {
			"back": "zurück zur Übersicht",
			"addPackage": "neues Paket",
			"deletePackage": "$1 löschen",
			"deleteFile": "$1 löschen"
		}
	},
	"editor": {
		"yesText": "Ok",
		"noText": "Abbrechen"
	},
	"libLayer": {
		"deps": "Abhängigkeiten",
		"optDeps": "Optionale Abhängigkeiten",
		"add": "Hinzufügen",
		"quit": "Beenden",
		"author": "Autor",
		"contributors": "Mitwirkende"
	},
	"boxes": {
		"header": {
			"info": "Information",
			"warning": "Warnung",
			"error": "Fehler !",
			"success": "Erfolgreich",
			"waiting": "Bitte warten.."
		},
		"buttons": {
			"yestext": {
				"normal": "Ja",
				"ok": "OK",
				"edit": "Bearbeiten"
			},
			"notext": {
				"normal": "Nein",
				"safety": "Lieber nicht.",
				"cancel": "Abbrechen",
				"moreInfo": "Details"
			}
		},
		"application": {
			"error": {
				"wrongArguments": "Fehlerhafte Parameterübergabe $1",
				"libraryCopy": "Das Starter Kit konnte nicht kopiert werden. <br/>$1 existiert nicht."
			},
			"waiting": {
				"libraryCopy": "Dateien werden aus der Bibliothek ins Projekt kopiert."
			},
			"success": {
				"libraryCopy": "Das Starter-Kit wurde kopiert."
			}
		},
		"lib": {
			"error": {
				"copy": "Datei konnte nicht kopiert werden: $1",
				"readOnly": "In den aktuellen Ordner kann nicht geschrieben werden",
				"pathMissing": "Kein Bibliotheks-Pfad angegeben",
				"modulesMissing": "Konnte modules.json nicht finden",
				"modulesParse": "Konnte modules.json nicht parsen",
				"packageMissing": "Konnte package.json nicht finden",
				"packageParse": "Konnte package.json nicht parsen"
			},
			"warning": {
				"keepExisting": "Datei $1 schon vorhanden. Werde nicht kopieren."
			}
		},
		"packager": {
			"error": {
				"devLoaderMissing": "Konnte den devLoader nicht laden",
				"smallLoaderMissing": "Konnte den smallLoader nicht laden",
				"packageWriteFail": "Konnte das Paket $1 nicht schreiben",
				"packerFail": "Es konnte nicht gepackt werden. Fehler werden jetzt im Editor angezeigt.",
				"compressorMissing": "KomprimierungsTool (Closure / Uglify) fehlt",
				"exeMissing": "Ausführbare Datei $1 fehlt !? Breche ab.",
				"nativeProcessUnavailable": "Kann keine nativen Prozesse ausführen. (Also ist das Programm eigentlich nutzlos)",
				"noPackages": "Es gibt keine Pakete in $1",
				"emptyPackages": "Es gibt leere Pakete in $1. Werde nicht packen"
			},
			"success": {
				"packed": "$1 wurde erfolgreich gepackt."
			},
			"waiting": {
				"packed": "Bitte warte bis das Projekt gepackt ist."
			},
			"info": {
				"validator": "$1 <br/> Könnte klappen / Könnte aber auch scheitern. <br/>Trotzdem packen?",
				"validatorResult": "$1 Fehler in $2 Dateien",
				"use_kit": "benutze starter-kit?"
			}
		},
		"validator": {
			"waiting": {
				"validate": "Warte bis das JS validiert ist."
			}
		},
		"configfile": {
			"error": {
				"configwrite": "Konfig konnte nicht geschrieben werden",
				"configread": "Konfig konnte nicht eingelesen werden",
				"configparse": "Konfig konnte nicht geparst werden",
				"fileExists": "Datei $1 bereits im Paket",
				"packageListMissing": "In der Konfig gibt es keine packageList."
			},
			"info": {
				"packageExists": "Das Paket $1 gibt es schon"
			},
			"success": {
				"configwrite": "Konfig wurde geschrieben"
			}
		},
		"savefile": {
			"error": {
				"projectRead": "Die Projekte-Datei konnte nicht gelesen werden",
				"projectParse": "Die Projekte-Datei konnte nicht geparst werden.",
				"projectWrite": "Die Projekte-Datei konnte nicht geschrieben werden."
			},
			"info": {
				"projectExists": "Das Projekt existiert bereits"
			}
		},
		"update": {
			"info": {
				"install": "Willst du das Update jetzt installieren?",
				"notOnMac": "Feature steht momentan für Mac nicht zur Verfügung",
				"newUpdate": "Version $1 verfügbar. <br/>Momentan installiert: $2<br/>Herunterladen?",
				"noUpdate": "Kein Update verfügbar"
			},
			"error": {
				"save": "Die Update-Datei konnte nicht gesichert werden.",
				"ioError": "Datei wurde nicht gefunden. Wende dich an den Anwendungsautor."
			},
			"warning": {
				"fail": "Konnte nicht auf Update prüfen. <br/>Server meldet: $1 (StatusCode)"
			}
		},
		"tray": {
			"error": {
				"projectChange": "Konnte nicht zum Projekt $1 wechseln"
			}
		},
		"menu": {
			"error": {
				"configParse": "Konnte Konfig nicht parsen.",
				"configWrite": "Konnte Konfig nicht speichern",
				"configRead": "Konnte Konfig nicht einlesen"
			},
			"success": {
				"configWrite": "Konfig wurde gespeichert."
			},
			"info": {
				"libPath": "Wo liegt die Skript-Bibliothek?"
			}
		},
		"editor": {
			"error": {
				"validJSON": "Kein valides JSON. Sieh dir den Text nochmal genauer an."
			}
		},
		"list": {
			"error": {
				"changeProject": "Konnte nicht zum Projekt $1 wechseln",
				"dropParse": "Konnte Datei $1 nicht parsen",
				"dropRead": "Konnte Datei $1 nicht lesen"
			},
			"warning": {
				"deleteProject": "Willst du das Projekt $1 löschen?"
			},
			"info": {
				"addProject": {
					"projectName": "Gib den Namen des Projektes an:",
					"projectPath": "Gib den Pfad des Projektes an:"
				}
			}
		},
		"details": {
			"error": {
				"unknownOption": "$1 ist eine unbekannte Option",
				"movePackage": "Konnte Pakete nicht verschieben",
				"deletePackage": "Konnte Paket $1 nicht löschen",
				"moveFile": "Datei konnte nicht verschoben werden",
				"directoryMismatch": "Dateien müssen im selben Ordner wie die jspackcfg oder darunter liegen.",
				"fileMisMatch": "Dateien mit der Endung $1 können nicht gepackt werden"
			},
			"warning": {
				"deletePackage": "Willst du das Paket $1 wirklich löschen ?",
				"deleteFile": "Willst du die Datei $1 wirklich löschen ?"
			},
			"info": {
				"addPackage": "Gib den Namen des Paketes an"
			}
		}
	}
}